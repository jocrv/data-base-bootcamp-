Data sctructure
vector and matrices (headquartes) //
register

what's a data structure:  is a structuree from data of memory for computer or any dispositive to stack up, with the correctly way to use this data with the right way. This structure are using for a lot application os developmento for systems, and some of them are specialixxed and to specifyc tasks. We are using the correct structure by algorithms to work with data quantitty like applications to search. 
one algortih is a group of estructure instructions and ordered to some goal or to do some task or specific operation. The algorithms are use to manager data on structures for a lot ways, for example: insert, exclude, search and ordered data. 
Algorithms: in some data structure we need to know how toe some group of basic operations, for example: insert data, exclude data, locate some element, process all the itens which constitue the structure to vise. Classify the resume to stock the itens in data for a determine order ( numeric, alfabetic ) // Principal structure of data: arrays (vectors and headquartes), register, list, stock, row, three, table hash, graphs

## arrays: vector anthe heardquart are structure from data simple to help when a lot of variable are available at the same algorithm. portugol-webstudio.cubos.io/ide // you can create the variable and insert the name1, name2, name4, name5. for example this structure // Vector or array is an unidimensional for a variable to save a lot of variables from the same type. The vector is a structure from data index, to save a determine quantity from values from one type. 

program{
    funcao inicio() {
        inteiro numeros[] = {39,45,54,55}

        escreva(numero[0])
    }
}

programa{
    funcao inicio() {
        inteiro numero[] = {39,45,54,55}

        para(inteiro posicao = 0; posicao <=3; posicao++){
            escreva(numeros[posicao], " ")
        }
    }
}

programa
{
    funcao inicrio()
    {
        inteiro vetor[] = {1,3,5,7,9} // Criar o vetor com valor 
        inteiro numero
        logico achou = falso // variável paraenas o resultado
        
        escreva("Qual número deseja procuraR?")
        leia(numero
        
        para(inteiro posicao = 0; psoicao < 5; posicao ++))
            }
}

...

programa
{
    funcao incio()
    {
        // criacao dos vetores, já com os dadosados
        cadeia nome[] = { "Andrew", "Tiffany", "Bianca", "Susan", "Cameron"}
        real altura[] = { 1.71, 1.78, 1.75, 1.87, 1.71}

        // created a top from this table
        escreva("---------------\n")
        escreva("    TABELA     \n")
        escreva("----------------\n")
    }
}

para(inteiro posicao = 0; posicao <5; posicao++)
{

    // o the special character \t serve to write one table

}

Headquarte or array multi dimensiona is a vector from vectores. The headquarter is a vector which had two or more dimensions. 

programa
{
    inclua biblioteca Util --> u
    funcao inicio()
    {
        // define the dimension (row and columns) from headquarte
        const inteiro TAMANHO= 5
        // created the quarterhead
        inteiro[TAMANHO][TAMANHO]

        para (inteiro linha = 0; linha < TAMANHO; linha++)
        {
            para(inteiro coluna = 0; coluna < TAMANHO; coluna++)
            {
                [linha][coluna] = u.sorteia(1,9) /// atribute the random value fot this headquarter
                escreva("[", matrixx[linha][coluna], "]")  /// exibition of the value contain in position of heardquarter
            }
            escreva("\n")
        }
    }
}

Register: register is a structure with a special format specialixxed to store the informations on memory. While Arrays allow store data from a just ony type data, resources of register on allow store from more than one type of data.  example cpf, number, text... One register is composed with fields with specify each one of this information which composed itself. Above some fields for example which constited some register from costumers:
cpf
name
address
contact
## we can mixxed differents numbers in some register

all structure have one name for example a book, and the fields, it could acess by some quite of using operation point(.) For example, to acess the price of some book, we could using this declaration: 
book.price

algorithm
//declare the type of data
type
structure_book = register
name : character
price : real
page : integer
endregister
//delcare the variables
i integer
book array[1...3] from structure_book

Write("Among names, price and number of pages from three books")
for i from 2 to 3 do //lecture the data
Read(book[i]. name, book[i].pages)
endto
Write("This is data typed")
to i from 1 to 3 do
Write(livro[i] name[i] price, book[i]. pages)
endto
ENDALGORITHM

